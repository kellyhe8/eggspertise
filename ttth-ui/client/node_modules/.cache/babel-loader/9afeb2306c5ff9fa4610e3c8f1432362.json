{"ast":null,"code":"var _jsxFileName = \"/Users/donaldliu/Documents/GitHub/talktothehand/ttth-ui/client/src/App.js\";\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\"; // import CenterRecognizeCol from './components/CenterRecognizeCol';\n// import LeftNavCol from './components/LeftNavCol';\n// import RightFeedbackCol from './components/RightFeedbackCol';\n\nimport Home from './Home';\nimport Recognize from './Recognize';\nimport Sign from './Sign'; // import { createTheme, ThemeProvider } from '@mui/material/styles';\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: \"#345995\",\n//     },\n//   },\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // useEffect(() => {\n  //   async function loadModel(){\n  //     console.log(\"[+] Application started\")\n  //     //Wait for tensorflow module to be ready\n  //     const tfReady = await tf.ready();\n  //     console.log(\"[+] Loading custom mask detection model\")\n  //     //Replce model.json and group1-shard.bin with your own custom model\n  //     const modelJson = await require(\"./assets/model/model.json\");\n  //     const modelWeight = await require(\"./assets/model/group1-shard.bin\");\n  //     const maskDetector = await tf.loadLayersModel(bundleResourceIO(modelJson,modelWeight));\n  //     console.log(\"[+] Loading pre-trained face detection model\")\n  //     //Blazeface is a face detection model provided by Google\n  //     const faceDetector =  await blazeface.load();\n  //     //Assign model to variable\n  //     setMaskDetector(maskDetector)\n  //     setFaceDetector(faceDetector)\n  //     console.log(\"[+] Model Loaded\")\n  //   }\n  //   loadModel()\n  // }, []); \n  // function imageToTensor(rawImageData){\n  //   //Function to convert jpeg image to tensors\n  //   const TO_UINT8ARRAY = true;\n  //   const { width, height, data } = jpeg.decode(rawImageData, TO_UINT8ARRAY);\n  //   // Drop the alpha channel info for mobilenet\n  //   const buffer = new Uint8Array(width * height * 3);\n  //   let offset = 0; // offset into original data\n  //   for (let i = 0; i < buffer.length; i += 3) {\n  //     buffer[i] = data[offset];\n  //     buffer[i + 1] = data[offset + 1];\n  //     buffer[i + 2] = data[offset + 2];\n  //     offset += 4;\n  //   }\n  //   return tf.tensor3d(buffer, [height, width, 3]);\n  // }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/recognize\",\n          element: /*#__PURE__*/_jsxDEV(Recognize, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign\",\n          element: /*#__PURE__*/_jsxDEV(Sign, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/donaldliu/Documents/GitHub/talktothehand/ttth-ui/client/src/App.js"],"names":["BrowserRouter","Router","Routes","Route","Home","Recognize","Sign","App"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD,C,CACA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE,QAAC,MAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAGA,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;KA5DQA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import CenterRecognizeCol from './components/CenterRecognizeCol';\n// import LeftNavCol from './components/LeftNavCol';\n// import RightFeedbackCol from './components/RightFeedbackCol';\nimport Home from './Home';\nimport Recognize from './Recognize';\nimport Sign from './Sign';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: \"#345995\",\n//     },\n//   },\n// });\n\nfunction App() {\n\n  // useEffect(() => {\n  //   async function loadModel(){\n  //     console.log(\"[+] Application started\")\n  //     //Wait for tensorflow module to be ready\n  //     const tfReady = await tf.ready();\n  //     console.log(\"[+] Loading custom mask detection model\")\n  //     //Replce model.json and group1-shard.bin with your own custom model\n  //     const modelJson = await require(\"./assets/model/model.json\");\n  //     const modelWeight = await require(\"./assets/model/group1-shard.bin\");\n  //     const maskDetector = await tf.loadLayersModel(bundleResourceIO(modelJson,modelWeight));\n  //     console.log(\"[+] Loading pre-trained face detection model\")\n  //     //Blazeface is a face detection model provided by Google\n  //     const faceDetector =  await blazeface.load();\n  //     //Assign model to variable\n  //     setMaskDetector(maskDetector)\n  //     setFaceDetector(faceDetector)\n  //     console.log(\"[+] Model Loaded\")\n  //   }\n  //   loadModel()\n  // }, []); \n\n  // function imageToTensor(rawImageData){\n  //   //Function to convert jpeg image to tensors\n  //   const TO_UINT8ARRAY = true;\n  //   const { width, height, data } = jpeg.decode(rawImageData, TO_UINT8ARRAY);\n  //   // Drop the alpha channel info for mobilenet\n  //   const buffer = new Uint8Array(width * height * 3);\n  //   let offset = 0; // offset into original data\n  //   for (let i = 0; i < buffer.length; i += 3) {\n  //     buffer[i] = data[offset];\n  //     buffer[i + 1] = data[offset + 1];\n  //     buffer[i + 2] = data[offset + 2];\n  //     offset += 4;\n  //   }\n  //   return tf.tensor3d(buffer, [height, width, 3]);\n  // }\n\n  return (\n    <Router>\n        <div className=\"App\">\n      {/* <ThemeProvider theme={theme}> */}\n      {/* <header className=\"App-header\"> */}\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          {/* <Route exact path=\"/\" element={<Home/>} /> */}\n          <Route path=\"/recognize\" element={<Recognize/>} />\n          <Route path=\"/sign\" element={<Sign/>} />\n          <Route path=\"*\" element={<Home/>}/>\n        </Routes>\n        {/* <Home/>\n        <Recognize/>\n        <Sign/> */}\n        \n      {/* </header> */}\n      {/* </ThemeProvider> */}\n    </div>\n      </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}